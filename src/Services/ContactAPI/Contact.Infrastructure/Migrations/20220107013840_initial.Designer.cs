// <auto-generated />
using System;
using Contact.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Contact.Infrastructure.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20220107013840_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Contact.Domain.Entities.Iletisim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<Guid>("KisiId")
                        .HasColumnType("uuid")
                        .HasColumnName("kisi_id");

                    b.Property<string>("Konum")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("konum");

                    b.Property<DateTime>("LastupDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastup_date");

                    b.Property<string>("Telefon")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("telefon");

                    b.HasKey("Id");

                    b.HasIndex("KisiId");

                    b.ToTable("iletisim_bilgileri");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b85d9b8-7b7c-4efc-893e-45045c50d282"),
                            CreateDate = new DateTime(2022, 1, 7, 4, 38, 40, 8, DateTimeKind.Local).AddTicks(1720),
                            Email = "kisi1@gmail.com",
                            KisiId = new Guid("27714296-cbce-4ad3-a8fa-4980ac44987c"),
                            Konum = "ANKARA",
                            LastupDate = new DateTime(2022, 1, 7, 4, 38, 40, 8, DateTimeKind.Local).AddTicks(1729),
                            Telefon = "(505)999 99 99"
                        },
                        new
                        {
                            Id = new Guid("072593f9-cde8-4e75-a20a-c1e923580ae0"),
                            CreateDate = new DateTime(2022, 1, 7, 4, 38, 40, 8, DateTimeKind.Local).AddTicks(3907),
                            Email = "kisi2@gmail.com",
                            KisiId = new Guid("3acf9782-999a-4364-aee6-c692f9d4ad4f"),
                            Konum = "İSTANBUL",
                            LastupDate = new DateTime(2022, 1, 7, 4, 38, 40, 8, DateTimeKind.Local).AddTicks(3912),
                            Telefon = "(505)555 55 55"
                        });
                });

            modelBuilder.Entity("Contact.Domain.Entities.Kisi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ad")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("ad");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("create_date");

                    b.Property<string>("Firma")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("firma");

                    b.Property<DateTime>("LastupDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastup_date");

                    b.Property<string>("Soyad")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("soyad");

                    b.HasKey("Id");

                    b.ToTable("kisiler");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27714296-cbce-4ad3-a8fa-4980ac44987c"),
                            Ad = "ad1",
                            CreateDate = new DateTime(2022, 1, 7, 4, 38, 40, 6, DateTimeKind.Local).AddTicks(5018),
                            Firma = "firma1",
                            LastupDate = new DateTime(2022, 1, 7, 4, 38, 40, 6, DateTimeKind.Local).AddTicks(2535),
                            Soyad = "soyad1"
                        },
                        new
                        {
                            Id = new Guid("3acf9782-999a-4364-aee6-c692f9d4ad4f"),
                            Ad = "ad2",
                            CreateDate = new DateTime(2022, 1, 7, 4, 38, 40, 6, DateTimeKind.Local).AddTicks(5522),
                            Firma = "firma2",
                            LastupDate = new DateTime(2022, 1, 7, 4, 38, 40, 6, DateTimeKind.Local).AddTicks(5510),
                            Soyad = "soyad2"
                        });
                });

            modelBuilder.Entity("Contact.Domain.Entities.Iletisim", b =>
                {
                    b.HasOne("Contact.Domain.Entities.Kisi", "Kisi")
                        .WithMany("IletisimBilgileri")
                        .HasForeignKey("KisiId")
                        .HasConstraintName("Iletisim_Bilgileri_Kisi_KisiId_Foreign_Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Kisi", b =>
                {
                    b.Navigation("IletisimBilgileri");
                });
#pragma warning restore 612, 618
        }
    }
}
